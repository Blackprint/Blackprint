name: Release

on:
  workflow_dispatch:
    inputs:
      engine:
        description: "Set this to dryRun if you didn't plan to publish the engine"
        required: true
        default: 'dryRun'
      sketch:
        description: "Set this to dryRun if you didn't plan to publish the sketch"
        required: true
        default: 'dryRun'
      remoteControl:
        description: "Set this to dryRun if you didn't plan to publish the remote control"
        required: true
        default: 'dryRun'
      codeGeneration:
        description: "Set this to dryRun if you didn't plan to publish the code generation"
        required: true
        default: 'dryRun'
  # release:
    # This specifies that the build will be triggered when we publish a release
    # types: [published]

jobs:
  build:
    name: Build Blackprint Modules
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: âš™ Set node version to 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 6

      - run: pnpm install

      - name: ðŸ›  Compile sketch and engine
        run: npm run compile

      - name: ðŸ”¥ Run unit tests
        run: npm run test



      - name: ðŸ“¦ Dry Run Sketch
        if: github.event.inputs.sketch == 'dryRun'
        run: npm publish --dry-run

      - name: ðŸ“¦ Publish Sketch
        if: github.event.inputs.sketch != 'dryRun'
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



      - name: ðŸ›  Running prepublish scripts for Engine
        working-directory: ./engine-js
        run: node ./utils/prepublish.js

      - name: ðŸ“¦ Dry Run Engine
        if: github.event.inputs.engine == 'dryRun'
        working-directory: ./engine-js
        run: npm publish --dry-run

      - name: ðŸ“¦ Publish Engine
        if: github.event.inputs.engine != 'dryRun'
        working-directory: ./engine-js
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ðŸ›  Running prepublish scripts
        run: node ./utils/prepublish.js

      - name: ðŸ›  Running prepublish scripts for Remote-Control
        working-directory: ./remote-control/js
        run: node ./utils/prepublish.js

      - name: ðŸ“¦ Dry Run Remote Control
        if: github.event.inputs.remoteControl == 'dryRun'
        working-directory: ./remote-control/js
        run: npm publish --dry-run

      - name: ðŸ“¦ Publish Remote Control
        if: github.event.inputs.remoteControl != 'dryRun'
        working-directory: ./remote-control/js
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


          
      - name: ðŸ“¦ Dry Run Code Generation
        if: github.event.inputs.codeGeneration == 'dryRun'
        working-directory: ./code-generation
        run: npm publish --dry-run

      - name: ðŸ“¦ Publish Code Generation
        if: github.event.inputs.codeGeneration != 'dryRun'
        working-directory: ./code-generation
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}