/* Blackprint 
 MIT Licensed */

if(window.templates === void 0)window.templates = Object.create(null)
window.templates['Blackprint/page.html'] = '<sf-space blackprint>\n  <!-- Put the cables behind the nodes -->\n  <sf-m name="cables" class="cables" id="test">\n    <svg style="transform: translate(-{{space[0]}}, -{{space[1]}}px)">\n      <g sf-repeat-this="x in list">\n        <path\n            @pointerover="cableFocused(x)"\n            @pointerout="cableUnfocused(x)"\n            d="M {{ recalculatePath(x) || x.head1[0] + \' \' + x.head1[1] }}\n               C {{ x.linePath }},\n                 {{ recalculatePath(x) || x.head2[0] + \' \' + x.head2[1] }}"\n            stroke="{{ x.valid ? x.color : \'red\' }}"\n            opacity="{{ x.valid ? 1 : 0.6 }}"\n            stroke-width="2"\n            fill="none"\n        ></path>\n\n        <circle\n            @pointerdown="cableHeadClicked(x, event)"\n            transform="translate({{x.head1[0]}}, {{x.head1[1]}})"\n            fill="{{ x.valid ? x.color : \'red\' }}"\n            r="5"\n            opacity="{{ x.valid ? 1 : 0.6 }}"\n        ></circle>\n        <circle\n            @pointerdown="cableHeadClicked(x, event)"\n            transform="translate({{x.head2[0]}}, {{x.head2[1]}})"\n            fill="{{ x.valid ? x.color : \'red\' }}"\n            r="5"\n            opacity="{{ x.valid ? 1 : 0.6 }}"\n        ></circle>\n      </g>\n    </svg>\n  </sf-m>\n\n  <!-- Nodes goes here -->\n  <sf-m name="nodes" class="nodes" style="user-select:none;">\n    <!-- Handled on ./nodes.js -->\n    <a-node class="node general" style="transform: translate({{ x }}px, {{ y }}px)" sf-repeat-this="x in list">\n      <div class="title" @dragmove="moveNode">{{ title }} <div class="description">{{ description }}</div></div>\n\n      <div style="display: flow-root;margin-top: 5px;">\n        <!-- Container for input -->\n        <div class="input">\n          <div class="ports {{ x.type.name }}" sf-repeat-this="x in inputs">\n            <div class="port"\n                @pointerdown="createCable(event, x)"\n                @pointerup="cableConnect(x)"\n                @pointerover="portHovered(event, x)"\n                @pointerout="portUnhovered"\n            ></div>\n            <div class="name">{{ x.name }}</div>\n          </div>\n        </div>\n\n        <!-- Container for output -->\n        <div class="output">\n          <div class="ports {{ x.type.name }}" sf-repeat-this="x in outputs">\n            <div class="name">{{ x.name }}</div>\n            <div class="port"\n                @pointerdown="createCable(event, x)"\n                @pointerup="cableConnect(x)"\n                @pointerover="portHovered(event, x)"\n                @pointerout="portUnhovered"\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Container for property -->\n      <div class="property">\n        <div class="ports {{ x.type.name }}" sf-repeat-this="x in properties">\n          <div class="name">{{ x.name }}</div>\n          <div class="port"\n              @pointerdown="createCable(event, x)"\n              @pointerup="cableConnect(x)"\n              @pointerover="portHovered(event, x)"\n              @pointerout="portUnhovered"\n          ></div>\n        </div>\n      </div>\n    </a-node>\n  </sf-m>\n</sf-space>'